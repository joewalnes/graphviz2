%!PS-Adobe-2.0
%%Creator: circo version 1.17.20041211.1600 (Sat Dec 11 16:29:07 UTC 2004)
%%For: (ellson) John Ellson [Exp. 12/31/04; north]
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 697 321
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset graphviz 0 0
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def
/showpage { } def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 697 321
%%PageOrientation: Portrait
gsave
35 35 662 286 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	run
gsave 10 dict begin
122 142 27 18 ellipse_path
stroke
gsave 10 dict begin
112 137 moveto
(run)
[4.8 6.96 6.96]
xshow
end grestore
end grestore

%	intr
gsave 10 dict begin
29 89 27 18 ellipse_path
stroke
gsave 10 dict begin
18 84 moveto
(intr)
[3.84 6.96 3.84 4.56]
xshow
end grestore
end grestore

%	run -> intr
newpath 101 130 moveto
86 122 65 110 50 101 curveto
stroke

%	kernel
gsave 10 dict begin
341 146 31 18 ellipse_path
stroke
gsave 10 dict begin
323 141 moveto
(kernel)
[6.72 6.24 4.8 6.96 6.24 3.84]
xshow
end grestore
end grestore

%	run -> kernel
newpath 149 142 moveto
190 143 267 145 310 145 curveto
stroke

%	runbl
gsave 10 dict begin
29 195 28 18 ellipse_path
stroke
gsave 10 dict begin
13 190 moveto
(runbl)
[4.8 6.96 6.96 6.96 3.84]
xshow
end grestore
end grestore

%	intr -> runbl
newpath 29 107 moveto
29 127 29 157 29 177 curveto
stroke

%	runbl -> run
newpath 50 183 moveto
66 174 86 162 101 154 curveto
stroke

%	zombie
gsave 10 dict begin
237 211 34 18 ellipse_path
stroke
gsave 10 dict begin
216 206 moveto
(zombie)
[6.24 6.96 10.8 6.96 3.84 6.24]
xshow
end grestore
end grestore

%	kernel -> zombie
newpath 320 159 moveto
302 170 277 186 259 197 curveto
stroke

%	sleep
gsave 10 dict begin
415 265 27 18 ellipse_path
stroke
gsave 10 dict begin
400 260 moveto
(sleep)
[5.52 3.84 6.24 6.24 6.96]
xshow
end grestore
end grestore

%	kernel -> sleep
newpath 352 163 moveto
366 186 391 226 405 248 curveto
stroke

%	runmem
gsave 10 dict begin
408 22 37 18 ellipse_path
stroke
gsave 10 dict begin
384 17 moveto
(runmem)
[4.8 6.96 6.96 10.8 6.24 10.8]
xshow
end grestore
end grestore

%	kernel -> runmem
newpath 350 129 moveto
363 105 386 63 399 40 curveto
stroke

%	1
gsave 10 dict begin
235 80 27 18 ellipse_path
stroke
gsave 10 dict begin
235 75 moveto 8.0 -0.5 (1) alignedtext
end grestore
end grestore

%	kernel -> 1
newpath 320 133 moveto
301 121 273 104 255 92 curveto
stroke

%	sleep -> runmem
newpath 414 247 moveto
413 201 410 85 409 40 curveto
stroke

%	swap
gsave 10 dict begin
555 262 27 18 ellipse_path
stroke
gsave 10 dict begin
540 257 moveto
(swap)
[5.52 9.6 6.24 6.96]
xshow
end grestore
end grestore

%	sleep -> swap
newpath 442 264 moveto
467 264 503 263 528 263 curveto
stroke

%	runswap
gsave 10 dict begin
622 138 37 18 ellipse_path
stroke
gsave 10 dict begin
597 133 moveto
(runswap)
[4.8 6.96 6.96 5.52 9.6 6.24 6.96]
xshow
end grestore
end grestore

%	swap -> runswap
newpath 564 245 moveto
577 221 600 179 613 156 curveto
stroke

%	runswap -> runmem
newpath 597 124 moveto
556 102 474 58 433 35 curveto
stroke

%	new
gsave 10 dict begin
548 19 27 18 ellipse_path
stroke
gsave 10 dict begin
536 14 moveto
(new)
[6.96 5.76 10.08]
xshow
end grestore
end grestore

%	runswap -> new
newpath 611 121 moveto
597 98 572 58 558 36 curveto
stroke

%	new -> runmem
newpath 521 20 moveto
499 20 469 21 445 21 curveto
stroke
endpage
showpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
end
restore
%%EOF
